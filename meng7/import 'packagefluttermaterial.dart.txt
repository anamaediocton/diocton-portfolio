import 'package:flutter/material.dart';

void main() => runApp(NailAppointmentApp());

class NailAppointmentApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Nail Appointment',
      theme: ThemeData(
        primarySwatch: Colors.pink,
        scaffoldBackgroundColor: Colors.pink[50],
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.pink, // Button background color
            foregroundColor: Colors.white, // Button text color
          ),
        ),
      ),
      home: ServicesScreen(),
    );
  }
}

class ServicesScreen extends StatefulWidget {
  @override
  _ServicesScreenState createState() => _ServicesScreenState();
}

class _ServicesScreenState extends State<ServicesScreen>
    with SingleTickerProviderStateMixin {
  final List<Map<String, dynamic>> services = [
    {'name': 'Manicure', 'price': 25.0},
    {'name': 'Pedicure', 'price': 30.0},
    {'name': 'Gel Nails', 'price': 40.0},
    {'name': 'Acrylic Nails', 'price': 50.0},
  ];

  late AnimationController _controller;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      duration: const Duration(seconds: 1),
      vsync: this,
    );
    _controller.forward();
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Nail Services'),
        backgroundColor: Colors.pink[300],
      ),
      body: ListView.builder(
        itemCount: services.length,
        itemBuilder: (context, index) {
          final service = services[index];
          return AnimatedBuilder(
            animation: _controller,
            builder: (context, child) {
              final animationValue = Curves.easeInOut.transform(
                _controller.value,
              );
              return Opacity(
                opacity: animationValue,
                child: Transform.translate(
                  offset: Offset(0, 50 * (1 - animationValue)),
                  child: child,
                ),
              );
            },
            child: Card(
              color: Colors.white,
              margin: EdgeInsets.all(8.0),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(10.0),
              ),
              child: ListTile(
                title: Text(
                  service['name'],
                  style: TextStyle(
                      fontWeight: FontWeight.bold, color: Colors.pink[900]),
                ),
                subtitle: Text('\$${service['price']}'),
                trailing: ElevatedButton(
                  onPressed: () {
                    showDialog(
                      context: context,
                      builder: (context) => AlertDialog(
                        title: Text('Book ${service['name']}'),
                        content:
                            Text('Confirm booking for \$${service['price']}?'),
                        actions: [
                          TextButton(
                            onPressed: () => Navigator.pop(context),
                            child: Text('Cancel',
                                style: TextStyle(color: Colors.pink)),
                          ),
                          TextButton(
                            onPressed: () {
                              Navigator.pop(context);
                              ScaffoldMessenger.of(context).showSnackBar(
                                SnackBar(
                                  content: Text('${service['name']} booked!'),
                                  backgroundColor: Colors.pink,
                                ),
                              );
                            },
                            child: Text('Confirm',
                                style: TextStyle(color: Colors.pink)),
                          ),
                        ],
                      ),
                    );
                  },
                  child: Text('Book'),
                ),
              ),
            ),
          );
        },
      ),
    );
  }
}